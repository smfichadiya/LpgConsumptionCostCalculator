@model IEnumerable<LpgConsumptionCostCalculator.Data.Models.LogData>
@using LpgConsumptionCostCalculator.Data.QueryOptions
@{
    ViewBag.Title = RLogging.LogsTitle;
    var queryOptions = (TableQueryOptions)ViewBag.QueryOptions;
}

<!-- Page Heading -->
<h1 class="h3 mb-2 text-gray-800">@ViewBag.Title</h1>

<!-- Content row -->
<div class="row">
    <div class="col-md-12 col-sm-12 col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-gray-800">@RLogging.LogsSearch</h6>
            </div>
            <div class="card-body">
                @using (Html.BeginForm("Logs", "Logging", FormMethod.Get))
                {
                    <form class="d-none d-sm-inline-block form-inline mr-auto ml-md-3 my-2 my-md-0 mw-100 navbar-search">
                        <div class="input-group">
                            <input type="text" name="searchString" class="form-control bg-light border-0 small" placeholder="@RLogging.LogsSearchPlaceholder" aria-label="Search" aria-describedby="basic-addon2">
                            <div class="input-group-append">
                                <button class="btn btn-dark" value="Search" id="btnSubmit" type="submit">
                                    <i class="fa fa-search"></i>
                                </button>
                            </div>
                        </div>
                    </form>
                }
            </div>
        </div>
    </div>
</div>

<!-- Content row -->
<div class="row">
    <!-- Table content -->
    <div class="col-xl-12 col-lg-12">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-gray-800">@RLogging.LogsTableTitle</h6>
            </div>
            <div class="card-body">
                @Html.BuildPaginationDetails(queryOptions, "Logs")
                <br />
                <div class="table-responsive">
                    <table class="table table-striped table-bordered table-hover">
                        <thead>
                            <tr>
                                <th>
                                    @Html.BuildSortableLink(@RLogging.LogsActionDate, "Logs", "LogTime", queryOptions)
                                </th>
                                <th>
                                    @Html.BuildSortableLink(@RLogging.LogsUser, "Logs", "UserName", queryOptions)
                                </th>
                                <th>
                                    @Html.BuildSortableLink(@RLogging.LogsMessage, "Logs", "LogMessage", queryOptions)
                                </th>
                                <th>
                                    @Html.BuildSortableLink(@RLogging.LogsActionDuration, "Logs", "RequestDuration", queryOptions)
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {
                                <tr>
                                    <td>
                                        <b>@Html.DisplayFor(modelItem => item.LogTime)</b>
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.UserName)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.LogMessage)
                                    </td>
                                    <td>
                                        @Html.DisplayFor(modelItem => item.RequestDuration)
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
                @if (queryOptions.TotalPages > 1)
                {
                    @Html.BuildNextPreviousLinks(queryOptions, "Index")
            <span>@RLogging.LogsShowing @((queryOptions.CurrentPage - 1) * queryOptions.PageSize + 1) @RLogging.LogsTo @((queryOptions.CurrentPage * queryOptions.PageSize) > ViewBag.NumberOfEntries ? ViewBag.NumberOfEntries : queryOptions.CurrentPage * queryOptions.PageSize) @RLogging.LogsOf @ViewBag.NumberOfEntries @RLogging.LogsEntries</span>
                }
            </div>
        </div>
    </div>
</div>